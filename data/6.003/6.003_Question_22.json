{
       "Course": "Signals and Systems",
       "Topic": "Frequency response",
       "Original question": "Write a program that uses bilinear interpolation to enlarge the image from its current dimensions to three times those dimensions.",
       "Solution": "import Image as im\n xx = im.open(\u2019zebra.jpg\u2019)\n xpix = xx.load()\n aa = im.new(\u2019L\u2019,[xx.size[0]+2,xx.size[1]+2],0)\n aa.paste(xx,(1,1))\n apix = aa.load()\n bb = im.new(\u2019L\u2019,[3*aa.size[0]-2,aa.size[1]],0)\n bpix = bb.load()\n cc = im.new(\u2019L\u2019,[3*aa.size[0]-2,aa.size[1]],0)\n lated\n cpix = cc.load()\n dd = im.new(\u2019L\u2019,[3*aa.size[0]-2,3*aa.size[1]-2],0) # vertical stretch\n dpix = dd.load()\n yy = im.new(\u2019L\u2019,[3*aa.size[0]-2,3*aa.size[1]-2],0) # final answer\n ypix = yy.load()\n for j in range(aa.size[1]):\n for i in range(aa.size[0]): # stretch image horizontally\n  bpix[3*i,j] = apix[i,j]\n for i in range(2,bb.size[0]-2): # convolve with triangle\n  cpix[i,j] = 0.333*bpix[i-2,j]+0.666*bpix[i-1,j]+bpix[i,j]\n  +0.666*bpix[i+1,j]+0.333*bpix[i+2,j]\n for i in range(cc.size[0]):\n for j in range(cc.size[1]): # stretch image vertically\n  dpix[i,3*j] = cpix[i,j]\n for j in range(2,dd.size[1]-2): # convolve with triangle\n  ypix[i,j] = 0.333*dpix[i,j-2]+0.666*dpix[i,j-1]+dpix[i,j]\n  +0.666*dpix[i,j+1]+0.333*dpix[i,j+2]\n yy.crop([3,3,yy.size[0]-3,yy.size[1]-3]).save(\u2018bilinear.jpg\u2019)"
}