{
       "Course": "Unified Engineering 3 and 4",
       "Topic": "Unified Computers and programming",
       "Original question": "Compare and contrast stacks and queues.",
       "Solution": "Stacks and Queues are subclasses of Linear Lists.\nStacks\nA Stack is an ordered (by position, not by value) collection of data (usually homogeneous), which maintains a Last-In-First-Out order. All access to a stack is restricted to one end of the list, called the top of stack. Visually, picture a stack of books, coins, plates, etc. Insertion and Deletion both take place at the top of the stack. The following operations are defined for stacks:\nOperation\nDescription\nInitialize\nInitialize internal structure; create empty stack\nPush\nAdd new element to top of stack\nPop\nRemove top element from stack\nEmpty\nTrue iff stack has no elements\nStackTop\nReturns copy of top element of stack (without popping it)\nSize\nReturns number of elements in the stack\nQueues\nA queue is an ordered (by position, not by value) collection of data (usually homogeneous), which maintains the First-In-First-Out order of elements. Insertion of elements is carried out at the \u2018Tail\u2019 of the queue and deletion is carried out at the \u2018Head\u2019 of the queue. The following operations are defined for queues:\nOperation\nDescription\nInitialize\nInitialize internal structure; create an empty queue\nEnqueue\nAdd new element to the tail of the queue\nDequeue\nRemove an element from the head of the queue\nEmpty\nTrue iff the queue has no elements\nFull\nTrue iff no elements can be inserted into the queue\nSize\nReturns number of elements in the queue\nDisplay\nDisplay the contents of the Queue"
}